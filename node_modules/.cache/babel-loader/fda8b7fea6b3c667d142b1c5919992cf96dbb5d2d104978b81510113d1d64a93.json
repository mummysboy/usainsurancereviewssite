{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Monetizelab\\\\OneDrive\\\\Desktop\\\\trisDoc\\\\usainsurancereviews\\\\insurance-form\\\\src\\\\contexts\\\\FormDataContext.js\",\n  _s = $RefreshSig$();\n// src/contexts/FormDataContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormDataContext = /*#__PURE__*/createContext();\nexport const FormDataProvider = ({\n  children\n}) => {\n  _s();\n  // Initialize formData with data from session storage if it exists\n  const [formData, setFormData] = useState(() => {\n    const savedData = sessionStorage.getItem(\"formData\");\n    return savedData ? JSON.parse(savedData) : {\n      insured: \"\",\n      ageGroup: \"\",\n      numDrivers: false,\n      numVehicles: false,\n      homeOwnership: false,\n      bundleInterest: false,\n      email: \"\"\n    };\n  });\n\n  // Save formData to session storage every time it changes\n  useEffect(() => {\n    sessionStorage.setItem(\"formData\", JSON.stringify(formData));\n  }, [formData]);\n  return /*#__PURE__*/_jsxDEV(FormDataContext.Provider, {\n    value: {\n      formData,\n      setFormData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(FormDataProvider, \"MENdiMtbscUFJqvkJxOqPhy/RSA=\");\n_c = FormDataProvider;\nvar _c;\n$RefreshReg$(_c, \"FormDataProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","FormDataContext","FormDataProvider","children","_s","formData","setFormData","savedData","sessionStorage","getItem","JSON","parse","insured","ageGroup","numDrivers","numVehicles","homeOwnership","bundleInterest","email","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Monetizelab/OneDrive/Desktop/trisDoc/usainsurancereviews/insurance-form/src/contexts/FormDataContext.js"],"sourcesContent":["// src/contexts/FormDataContext.js\r\nimport React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const FormDataContext = createContext();\r\n\r\nexport const FormDataProvider = ({ children }) => {\r\n  // Initialize formData with data from session storage if it exists\r\n  const [formData, setFormData] = useState(() => {\r\n    const savedData = sessionStorage.getItem(\"formData\");\r\n    return savedData\r\n      ? JSON.parse(savedData)\r\n      : {\r\n          insured: \"\",\r\n          ageGroup: \"\",\r\n          numDrivers: false,\r\n          numVehicles: false,\r\n          homeOwnership: false,\r\n          bundleInterest: false,\r\n          email: \"\",\r\n        };\r\n  });\r\n\r\n  // Save formData to session storage every time it changes\r\n  useEffect(() => {\r\n    sessionStorage.setItem(\"formData\", JSON.stringify(formData));\r\n  }, [formData]);\r\n\r\n  return (\r\n    <FormDataContext.Provider value={{ formData, setFormData }}>\r\n      {children}\r\n    </FormDataContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,eAAe,gBAAGL,aAAa,CAAC,CAAC;AAE9C,OAAO,MAAMM,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAC7C,MAAMU,SAAS,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IACpD,OAAOF,SAAS,GACZG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GACrB;MACEK,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE,KAAK;MAClBC,aAAa,EAAE,KAAK;MACpBC,cAAc,EAAE,KAAK;MACrBC,KAAK,EAAE;IACT,CAAC;EACP,CAAC,CAAC;;EAEF;EACApB,SAAS,CAAC,MAAM;IACdU,cAAc,CAACW,OAAO,CAAC,UAAU,EAAET,IAAI,CAACU,SAAS,CAACf,QAAQ,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA,CAACC,eAAe,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,QAAQ;MAAEC;IAAY,CAAE;IAAAH,QAAA,EACxDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACtB,EAAA,CA3BWF,gBAAgB;AAAAyB,EAAA,GAAhBzB,gBAAgB;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}