{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Monetizelab\\\\OneDrive\\\\Desktop\\\\trisDoc\\\\usainsurancereviews\\\\insurance-form\\\\src\\\\components\\\\StepEmail.js\",\n  _s = $RefreshSig$();\n// src/components/StepEmail.js\nimport React, { useState, useContext } from \"react\";\nimport { FormDataContext } from \"../contexts/FormDataContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./../Form.css\"; // Import your stylesheet here\nimport { CSSTransition } from \"react-transition-group\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StepEmail = () => {\n  _s();\n  const {\n    formData,\n    setFormData\n  } = useContext(FormDataContext);\n  const navigate = useNavigate();\n\n  // Local state to handle whether the user wants to submit email and the email value\n  const [wantsUpdates, setWantsUpdates] = useState(formData.wantsUpdates || false);\n  const [email, setEmail] = useState(formData.email || \"\");\n\n  // Handle navigation to the previous and next steps\n  const handlePrevious = () => {\n    navigate(\"/step-summary\");\n  };\n  const handleNext = () => {\n    // Update the context with the user's decision and email\n    setFormData({\n      ...formData,\n      wantsUpdates,\n      email: wantsUpdates ? email : \"\" // Only save email if they want updates\n    });\n    navigate(\"/final-step\");\n  };\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: true,\n    appear: true,\n    timeout: 500,\n    classNames: \"fade-slide\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: \"90%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Would You Like to Receive Updates on Additional Discounts?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), wantsUpdates && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Enter your email address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"example@domain.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option-button ${wantsUpdates === true ? \"selected\" : \"\"}`,\n          onClick: () => setWantsUpdates(true),\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option-button ${wantsUpdates === false ? \"selected\" : \"\"}`,\n          onClick: () => setWantsUpdates(false),\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          disabled: wantsUpdates && !email,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"secondary-button\",\n          onClick: handlePrevious,\n          children: \"Finish Without Receiving Updates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(StepEmail, \"Wua+NXZ+0MJcFY/t/iEwGmydGqs=\", false, function () {\n  return [useNavigate];\n});\n_c = StepEmail;\nexport default StepEmail;\nvar _c;\n$RefreshReg$(_c, \"StepEmail\");","map":{"version":3,"names":["React","useState","useContext","FormDataContext","useNavigate","CSSTransition","jsxDEV","_jsxDEV","StepEmail","_s","formData","setFormData","navigate","wantsUpdates","setWantsUpdates","email","setEmail","handlePrevious","handleNext","in","appear","timeout","classNames","children","className","style","width","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Monetizelab/OneDrive/Desktop/trisDoc/usainsurancereviews/insurance-form/src/components/StepEmail.js"],"sourcesContent":["// src/components/StepEmail.js\r\nimport React, { useState, useContext } from \"react\";\r\nimport { FormDataContext } from \"../contexts/FormDataContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./../Form.css\"; // Import your stylesheet here\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst StepEmail = () => {\r\n  const { formData, setFormData } = useContext(FormDataContext);\r\n  const navigate = useNavigate();\r\n\r\n  // Local state to handle whether the user wants to submit email and the email value\r\n  const [wantsUpdates, setWantsUpdates] = useState(\r\n    formData.wantsUpdates || false\r\n  );\r\n  const [email, setEmail] = useState(formData.email || \"\");\r\n\r\n  // Handle navigation to the previous and next steps\r\n  const handlePrevious = () => {\r\n    navigate(\"/step-summary\");\r\n  };\r\n\r\n  const handleNext = () => {\r\n    // Update the context with the user's decision and email\r\n    setFormData({\r\n      ...formData,\r\n      wantsUpdates,\r\n      email: wantsUpdates ? email : \"\", // Only save email if they want updates\r\n    });\r\n    navigate(\"/final-step\");\r\n  };\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames=\"fade-slide\"\r\n    >\r\n      <div className=\"form-container\">\r\n        {/* Progress bar container */}\r\n        <div className=\"progress-bar-container\">\r\n          <div className=\"progress-bar\" style={{ width: \"90%\" }}></div>\r\n        </div>\r\n        <h1>Would You Like to Receive Updates on Additional Discounts?</h1>\r\n        {/* Display email input if user wants updates */}\r\n        {wantsUpdates && (\r\n          <div className=\"email-container\">\r\n            <label htmlFor=\"email\">Enter your email address:</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"example@domain.com\"\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"options-container\">\r\n          <button\r\n            className={`option-button ${\r\n              wantsUpdates === true ? \"selected\" : \"\"\r\n            }`}\r\n            onClick={() => setWantsUpdates(true)}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            className={`option-button ${\r\n              wantsUpdates === false ? \"selected\" : \"\"\r\n            }`}\r\n            onClick={() => setWantsUpdates(false)}\r\n          >\r\n            No\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"buttons-container\">\r\n          <button onClick={handleNext} disabled={wantsUpdates && !email}>\r\n            Submit\r\n          </button>\r\n          <button className=\"secondary-button\" onClick={handlePrevious}>\r\n            Finish Without Receiving Updates\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default StepEmail;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,eAAe,CAAC,CAAC;AACxB,SAASC,aAAa,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAGT,UAAU,CAACC,eAAe,CAAC;EAC7D,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAC9CS,QAAQ,CAACG,YAAY,IAAI,KAC3B,CAAC;EACD,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACS,QAAQ,CAACK,KAAK,IAAI,EAAE,CAAC;;EAExD;EACA,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3BL,QAAQ,CAAC,eAAe,CAAC;EAC3B,CAAC;EAED,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACvB;IACAP,WAAW,CAAC;MACV,GAAGD,QAAQ;MACXG,YAAY;MACZE,KAAK,EAAEF,YAAY,GAAGE,KAAK,GAAG,EAAE,CAAE;IACpC,CAAC,CAAC;IACFH,QAAQ,CAAC,aAAa,CAAC;EACzB,CAAC;EAED,oBACEL,OAAA,CAACF,aAAa;IACZc,EAAE,EAAE,IAAK;IACTC,MAAM,EAAE,IAAK;IACbC,OAAO,EAAE,GAAI;IACbC,UAAU,EAAC,YAAY;IAAAC,QAAA,eAEvBhB,OAAA;MAAKiB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAE7BhB,OAAA;QAAKiB,SAAS,EAAC,wBAAwB;QAAAD,QAAA,eACrChB,OAAA;UAAKiB,SAAS,EAAC,cAAc;UAACC,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAM;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eACNvB,OAAA;QAAAgB,QAAA,EAAI;MAA0D;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAElEjB,YAAY,iBACXN,OAAA;QAAKiB,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAC9BhB,OAAA;UAAOwB,OAAO,EAAC,OAAO;UAAAR,QAAA,EAAC;QAAyB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxDvB,OAAA;UACEyB,IAAI,EAAC,OAAO;UACZC,EAAE,EAAC,OAAO;UACVC,KAAK,EAAEnB,KAAM;UACboB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CI,WAAW,EAAC;QAAoB;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,eACDvB,OAAA;QAAKiB,SAAS,EAAC,mBAAmB;QAAAD,QAAA,gBAChChB,OAAA;UACEiB,SAAS,EAAE,iBACTX,YAAY,KAAK,IAAI,GAAG,UAAU,GAAG,EAAE,EACtC;UACH0B,OAAO,EAAEA,CAAA,KAAMzB,eAAe,CAAC,IAAI,CAAE;UAAAS,QAAA,EACtC;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTvB,OAAA;UACEiB,SAAS,EAAE,iBACTX,YAAY,KAAK,KAAK,GAAG,UAAU,GAAG,EAAE,EACvC;UACH0B,OAAO,EAAEA,CAAA,KAAMzB,eAAe,CAAC,KAAK,CAAE;UAAAS,QAAA,EACvC;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENvB,OAAA;QAAKiB,SAAS,EAAC,mBAAmB;QAAAD,QAAA,gBAChChB,OAAA;UAAQgC,OAAO,EAAErB,UAAW;UAACsB,QAAQ,EAAE3B,YAAY,IAAI,CAACE,KAAM;UAAAQ,QAAA,EAAC;QAE/D;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTvB,OAAA;UAAQiB,SAAS,EAAC,kBAAkB;UAACe,OAAO,EAAEtB,cAAe;UAAAM,QAAA,EAAC;QAE9D;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB,CAAC;AAACrB,EAAA,CAjFID,SAAS;EAAA,QAEIJ,WAAW;AAAA;AAAAqC,EAAA,GAFxBjC,SAAS;AAmFf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}