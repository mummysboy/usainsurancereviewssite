{"ast":null,"code":"// src/components/LoadingDeals.js\nimport React,{useEffect,useState,useContext}from\"react\";import{useNavigate}from\"react-router-dom\";import{FormDataContext}from\"../contexts/FormDataContext\";import axios from\"axios\";import\"./../LoadingDeals.css\";// Custom CSS for the loading animation\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoadingDeals=()=>{const navigate=useNavigate();const{formData,setFormData}=useContext(FormDataContext);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchCityFromZip=async zipCode=>{try{// Fetch city information from the zip code\nconst response=await axios.get(`https://api.zippopotam.us/us/${zipCode}`);const cityName=response.data.places[0][\"place name\"];// Update form data with the fetched city\nsetFormData({...formData,city:cityName});}catch(error){console.error(\"Error fetching city data:\",error);setFormData({...formData,city:\"your area\"});}finally{// Set loading state to false once the API call is complete\nsetLoading(false);// Navigate to the OffersPage once the city data is loaded\nsetTimeout(()=>{navigate(\"/offers\");},2000);// Adding a slight delay for better user experience\n}};if(formData.zipCode){fetchCityFromZip(formData.zipCode);}else{// If no zip code is provided, set loading to false\nsetLoading(false);navigate(\"/offers\");}},[formData,navigate,setFormData]);return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-deals-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{className:\"loading-text\",children:\"Looking for the best deals...\"})]});};export default LoadingDeals;","map":{"version":3,"names":["React","useEffect","useState","useContext","useNavigate","FormDataContext","axios","jsx","_jsx","jsxs","_jsxs","LoadingDeals","navigate","formData","setFormData","loading","setLoading","fetchCityFromZip","zipCode","response","get","cityName","data","places","city","error","console","setTimeout","className","children"],"sources":["C:/Users/Monetizelab/OneDrive/Desktop/trisDoc/usainsurancereviews/insurance-form/src/components/LoadingDeals.js"],"sourcesContent":["// src/components/LoadingDeals.js\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FormDataContext } from \"../contexts/FormDataContext\";\r\nimport axios from \"axios\";\r\nimport \"./../LoadingDeals.css\"; // Custom CSS for the loading animation\r\n\r\nconst LoadingDeals = () => {\r\n  const navigate = useNavigate();\r\n  const { formData, setFormData } = useContext(FormDataContext);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchCityFromZip = async (zipCode) => {\r\n      try {\r\n        // Fetch city information from the zip code\r\n        const response = await axios.get(\r\n          `https://api.zippopotam.us/us/${zipCode}`\r\n        );\r\n        const cityName = response.data.places[0][\"place name\"];\r\n\r\n        // Update form data with the fetched city\r\n        setFormData({ ...formData, city: cityName });\r\n      } catch (error) {\r\n        console.error(\"Error fetching city data:\", error);\r\n        setFormData({ ...formData, city: \"your area\" });\r\n      } finally {\r\n        // Set loading state to false once the API call is complete\r\n        setLoading(false);\r\n\r\n        // Navigate to the OffersPage once the city data is loaded\r\n        setTimeout(() => {\r\n          navigate(\"/offers\");\r\n        }, 2000); // Adding a slight delay for better user experience\r\n      }\r\n    };\r\n\r\n    if (formData.zipCode) {\r\n      fetchCityFromZip(formData.zipCode);\r\n    } else {\r\n      // If no zip code is provided, set loading to false\r\n      setLoading(false);\r\n      navigate(\"/offers\");\r\n    }\r\n  }, [formData, navigate, setFormData]);\r\n\r\n  return (\r\n    <div className=\"loading-deals-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n      <p className=\"loading-text\">Looking for the best deals...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingDeals;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAC9D,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,eAAe,KAAQ,6BAA6B,CAC7D,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,uBAAuB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhC,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAES,QAAQ,CAAEC,WAAY,CAAC,CAAGX,UAAU,CAACE,eAAe,CAAC,CAC7D,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,gBAAgB,CAAG,KAAO,CAAAC,OAAO,EAAK,CAC1C,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAb,KAAK,CAACc,GAAG,CAC9B,gCAAgCF,OAAO,EACzC,CAAC,CACD,KAAM,CAAAG,QAAQ,CAAGF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAEtD;AACAT,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEW,IAAI,CAAEH,QAAS,CAAC,CAAC,CAC9C,CAAE,MAAOI,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACjDX,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEW,IAAI,CAAE,WAAY,CAAC,CAAC,CACjD,CAAC,OAAS,CACR;AACAR,UAAU,CAAC,KAAK,CAAC,CAEjB;AACAW,UAAU,CAAC,IAAM,CACff,QAAQ,CAAC,SAAS,CAAC,CACrB,CAAC,CAAE,IAAI,CAAC,CAAE;AACZ,CACF,CAAC,CAED,GAAIC,QAAQ,CAACK,OAAO,CAAE,CACpBD,gBAAgB,CAACJ,QAAQ,CAACK,OAAO,CAAC,CACpC,CAAC,IAAM,CACL;AACAF,UAAU,CAAC,KAAK,CAAC,CACjBJ,QAAQ,CAAC,SAAS,CAAC,CACrB,CACF,CAAC,CAAE,CAACC,QAAQ,CAAED,QAAQ,CAAEE,WAAW,CAAC,CAAC,CAErC,mBACEJ,KAAA,QAAKkB,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACtCrB,IAAA,QAAKoB,SAAS,CAAC,iBAAiB,CAAM,CAAC,cACvCpB,IAAA,MAAGoB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,+BAA6B,CAAG,CAAC,EAC1D,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}