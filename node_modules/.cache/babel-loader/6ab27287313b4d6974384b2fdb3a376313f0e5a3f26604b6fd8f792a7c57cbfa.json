{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Monetizelab\\\\OneDrive\\\\Desktop\\\\trisDoc\\\\usainsurancereviews\\\\insurance-form\\\\src\\\\components\\\\UserFlowTwo\\\\StepThree2.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { GoogleMap, useLoadScript, Autocomplete } from \"@react-google-maps/api\";\nimport \"../../styles/flowTwo/StepThree2.css\";\nimport Header from \"../UserFlowOne/Header\";\nimport Footer from \"./Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst libraries = [\"places\"];\nconst StepThree2 = () => {\n  _s();\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\",\n    // Replace with your API key\n    libraries\n  });\n  const [selectedCoverage, setSelectedCoverage] = useState(\"standard\");\n  const [formData, setFormData] = useState({\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\"\n  });\n  const [autocomplete, setAutocomplete] = useState(null);\n  const handlePlaceSelect = () => {\n    const place = autocomplete.getPlace();\n    const addressComponents = place.address_components;\n    const getComponent = type => {\n      var _addressComponents$fi;\n      return (_addressComponents$fi = addressComponents.find(component => component.types.includes(type))) === null || _addressComponents$fi === void 0 ? void 0 : _addressComponents$fi.long_name;\n    };\n    setFormData({\n      address: place.formatted_address,\n      city: getComponent(\"locality\") || \"\",\n      state: getComponent(\"administrative_area_level_1\") || \"\",\n      zip: getComponent(\"postal_code\") || \"\"\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    alert(\"Form submitted: \" + JSON.stringify(formData));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"step-number\",\n          children: \"3.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), \" Contact Details and See Quote\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Street Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), isLoaded ? /*#__PURE__*/_jsxDEV(Autocomplete, {\n            onLoad: autocomplete => setAutocomplete(autocomplete),\n            onPlaceChanged: handlePlaceSelect,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"address\",\n              placeholder: \"Ex: 123 Main St.\",\n              value: formData.address,\n              onChange: e => setFormData({\n                ...formData,\n                address: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"city\",\n            value: formData.city,\n            readOnly: true,\n            placeholder: \"City will autofill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"state\",\n            value: formData.state,\n            readOnly: true,\n            placeholder: \"State will autofill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"ZIP Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"zip\",\n            value: formData.zip,\n            readOnly: true,\n            placeholder: \"ZIP Code will autofill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"coverage-title\",\n          children: \"What type of rates do you want to see?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"coverage-description\",\n          children: \"Select a coverage option.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"get-quote-button1\",\n          children: \"Get Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(StepThree2, \"OdpdURS0dvaFrULbHmW4e6ZU56M=\", false, function () {\n  return [useLoadScript];\n});\n_c = StepThree2;\nexport default StepThree2;\nvar _c;\n$RefreshReg$(_c, \"StepThree2\");","map":{"version":3,"names":["React","useState","GoogleMap","useLoadScript","Autocomplete","Header","Footer","jsxDEV","_jsxDEV","libraries","StepThree2","_s","isLoaded","googleMapsApiKey","selectedCoverage","setSelectedCoverage","formData","setFormData","address","city","state","zip","autocomplete","setAutocomplete","handlePlaceSelect","place","getPlace","addressComponents","address_components","getComponent","type","_addressComponents$fi","find","component","types","includes","long_name","formatted_address","handleSubmit","e","preventDefault","alert","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","onLoad","onPlaceChanged","name","placeholder","value","onChange","target","required","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/Monetizelab/OneDrive/Desktop/trisDoc/usainsurancereviews/insurance-form/src/components/UserFlowTwo/StepThree2.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { GoogleMap, useLoadScript, Autocomplete } from \"@react-google-maps/api\";\r\nimport \"../../styles/flowTwo/StepThree2.css\";\r\nimport Header from \"../UserFlowOne/Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst libraries = [\"places\"];\r\n\r\nconst StepThree2 = () => {\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\", // Replace with your API key\r\n    libraries,\r\n  });\r\n\r\n  const [selectedCoverage, setSelectedCoverage] = useState(\"standard\");\r\n  const [formData, setFormData] = useState({\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zip: \"\",\r\n  });\r\n\r\n  const [autocomplete, setAutocomplete] = useState(null);\r\n\r\n  const handlePlaceSelect = () => {\r\n    const place = autocomplete.getPlace();\r\n    const addressComponents = place.address_components;\r\n\r\n    const getComponent = (type) =>\r\n      addressComponents.find((component) => component.types.includes(type))\r\n        ?.long_name;\r\n\r\n    setFormData({\r\n      address: place.formatted_address,\r\n      city: getComponent(\"locality\") || \"\",\r\n      state: getComponent(\"administrative_area_level_1\") || \"\",\r\n      zip: getComponent(\"postal_code\") || \"\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    alert(\"Form submitted: \" + JSON.stringify(formData));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"quote-form-container\">\r\n        <h3 className=\"title\">\r\n          <span className=\"step-number\">3.</span> Contact Details and See Quote\r\n        </h3>\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Street Address</label>\r\n            {isLoaded ? (\r\n              <Autocomplete\r\n                onLoad={(autocomplete) => setAutocomplete(autocomplete)}\r\n                onPlaceChanged={handlePlaceSelect}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  placeholder=\"Ex: 123 Main St.\"\r\n                  value={formData.address}\r\n                  onChange={(e) =>\r\n                    setFormData({ ...formData, address: e.target.value })\r\n                  }\r\n                  required\r\n                />\r\n              </Autocomplete>\r\n            ) : (\r\n              <p>Loading...</p>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>City</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"city\"\r\n              value={formData.city}\r\n              readOnly\r\n              placeholder=\"City will autofill\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>State</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"state\"\r\n              value={formData.state}\r\n              readOnly\r\n              placeholder=\"State will autofill\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>ZIP Code</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"zip\"\r\n              value={formData.zip}\r\n              readOnly\r\n              placeholder=\"ZIP Code will autofill\"\r\n            />\r\n          </div>\r\n\r\n          <h4 className=\"coverage-title\">\r\n            What type of rates do you want to see?\r\n          </h4>\r\n          <p className=\"coverage-description\">Select a coverage option.</p>\r\n\r\n          <button type=\"submit\" className=\"get-quote-button1\">\r\n            Get Quote\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepThree2;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}