{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Monetizelab\\\\OneDrive\\\\Desktop\\\\trisDoc\\\\usainsurancereviews\\\\insurance-form\\\\src\\\\components\\\\LazyLoading.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyImage = ({\n  src,\n  alt,\n  placeholder\n}) => {\n  _s();\n  // State to handle when the actual image has been loaded\n  const [isLoaded, setIsLoaded] = useState(false);\n  // Ref to access the image DOM node\n  const imgRef = useRef(null);\n  useEffect(() => {\n    // Create a new intersection observer\n    const observer = new IntersectionObserver((entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          // Set the image src when it is about to come into view\n          const img = entry.target;\n          img.src = src;\n          observer.unobserve(img);\n        }\n      });\n    });\n\n    // Observe the current image ref\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n\n    // Cleanup observer when component is unmounted\n    return () => {\n      if (imgRef.current) {\n        observer.unobserve(imgRef.current);\n      }\n    };\n  }, [src]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-wrapper\",\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imgRef,\n      alt: alt,\n      loading: \"lazy\",\n      style: {\n        opacity: isLoaded ? 1 : 0,\n        transition: \"opacity 0.5s ease-in-out\"\n      },\n      onLoad: () => setIsLoaded(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), !isLoaded && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: placeholder,\n      alt: \"placeholder\",\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        filter: \"blur(10px)\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(LazyImage, \"HFBupMMVNonC3+m+kvLLrjYkDpk=\");\n_c = LazyImage;\nexport default LazyLoading;\nvar _c;\n$RefreshReg$(_c, \"LazyImage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","LazyImage","src","alt","placeholder","_s","isLoaded","setIsLoaded","imgRef","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","img","target","unobserve","current","observe","className","style","position","children","ref","loading","opacity","transition","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","top","left","width","height","filter","_c","LazyLoading","$RefreshReg$"],"sources":["C:/Users/Monetizelab/OneDrive/Desktop/trisDoc/usainsurancereviews/insurance-form/src/components/LazyLoading.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nconst LazyImage = ({ src, alt, placeholder }) => {\r\n  // State to handle when the actual image has been loaded\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  // Ref to access the image DOM node\r\n  const imgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Create a new intersection observer\r\n    const observer = new IntersectionObserver((entries, observer) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          // Set the image src when it is about to come into view\r\n          const img = entry.target;\r\n          img.src = src;\r\n          observer.unobserve(img);\r\n        }\r\n      });\r\n    });\r\n\r\n    // Observe the current image ref\r\n    if (imgRef.current) {\r\n      observer.observe(imgRef.current);\r\n    }\r\n\r\n    // Cleanup observer when component is unmounted\r\n    return () => {\r\n      if (imgRef.current) {\r\n        observer.unobserve(imgRef.current);\r\n      }\r\n    };\r\n  }, [src]);\r\n\r\n  return (\r\n    <div className=\"image-wrapper\" style={{ position: \"relative\" }}>\r\n      <img\r\n        ref={imgRef}\r\n        alt={alt}\r\n        loading=\"lazy\"\r\n        style={{\r\n          opacity: isLoaded ? 1 : 0,\r\n          transition: \"opacity 0.5s ease-in-out\",\r\n        }}\r\n        onLoad={() => setIsLoaded(true)}\r\n      />\r\n      {!isLoaded && (\r\n        <img\r\n          src={placeholder}\r\n          alt=\"placeholder\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            filter: \"blur(10px)\",\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LazyLoading;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,SAAS,GAAGA,CAAC;EAAEC,GAAG;EAAEC,GAAG;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC/C;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C;EACA,MAAMY,MAAM,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE3BC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,QAAQ,GAAG,IAAIC,oBAAoB,CAAC,CAACC,OAAO,EAAEF,QAAQ,KAAK;MAC/DE,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxB;UACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM;UACxBD,GAAG,CAACb,GAAG,GAAGA,GAAG;UACbO,QAAQ,CAACQ,SAAS,CAACF,GAAG,CAAC;QACzB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,IAAIP,MAAM,CAACU,OAAO,EAAE;MAClBT,QAAQ,CAACU,OAAO,CAACX,MAAM,CAACU,OAAO,CAAC;IAClC;;IAEA;IACA,OAAO,MAAM;MACX,IAAIV,MAAM,CAACU,OAAO,EAAE;QAClBT,QAAQ,CAACQ,SAAS,CAACT,MAAM,CAACU,OAAO,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,CAAChB,GAAG,CAAC,CAAC;EAET,oBACEF,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAC,QAAA,gBAC7DvB,OAAA;MACEwB,GAAG,EAAEhB,MAAO;MACZL,GAAG,EAAEA,GAAI;MACTsB,OAAO,EAAC,MAAM;MACdJ,KAAK,EAAE;QACLK,OAAO,EAAEpB,QAAQ,GAAG,CAAC,GAAG,CAAC;QACzBqB,UAAU,EAAE;MACd,CAAE;MACFC,MAAM,EAAEA,CAAA,KAAMrB,WAAW,CAAC,IAAI;IAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACD,CAAC1B,QAAQ,iBACRN,OAAA;MACEE,GAAG,EAAEE,WAAY;MACjBD,GAAG,EAAC,aAAa;MACjBkB,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBW,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,MAAM,EAAE;MACV;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA5DIJ,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AA8Df,eAAesC,WAAW;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}