{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Monetizelab\\\\OneDrive\\\\Desktop\\\\trisDoc\\\\usainsurancereviews\\\\insurance-form\\\\src\\\\components\\\\LazyImage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LazyImage = ({\n  src,\n  alt,\n  placeholder\n}) => {\n  _s();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const imgRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const img = entry.target;\n          img.src = src; // Set the image source when it comes into view\n          observer.unobserve(img);\n        }\n      });\n    });\n    if (imgRef.current) {\n      observer.observe(imgRef.current);\n    }\n    return () => {\n      if (imgRef.current) {\n        observer.unobserve(imgRef.current);\n      }\n    };\n  }, [src]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lazy-image-wrapper\",\n    children: [!isLoaded && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: placeholder,\n      alt: \"placeholder\",\n      className: \"lazy-placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imgRef,\n      alt: alt,\n      className: \"lazy-image\",\n      onLoad: () => setIsLoaded(true),\n      style: {\n        opacity: isLoaded ? 1 : 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(LazyImage, \"HFBupMMVNonC3+m+kvLLrjYkDpk=\");\n_c = LazyImage;\nexport default LazyImage;\nvar _c;\n$RefreshReg$(_c, \"LazyImage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","LazyImage","src","alt","placeholder","_s","isLoaded","setIsLoaded","imgRef","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","img","target","unobserve","current","observe","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onLoad","style","opacity","_c","$RefreshReg$"],"sources":["C:/Users/Monetizelab/OneDrive/Desktop/trisDoc/usainsurancereviews/insurance-form/src/components/LazyImage.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nconst LazyImage = ({ src, alt, placeholder }) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const imgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver((entries, observer) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          const img = entry.target;\r\n          img.src = src; // Set the image source when it comes into view\r\n          observer.unobserve(img);\r\n        }\r\n      });\r\n    });\r\n\r\n    if (imgRef.current) {\r\n      observer.observe(imgRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (imgRef.current) {\r\n        observer.unobserve(imgRef.current);\r\n      }\r\n    };\r\n  }, [src]);\r\n\r\n  return (\r\n    <div className=\"lazy-image-wrapper\">\r\n      {/* Placeholder Image */}\r\n      {!isLoaded && (\r\n        <img src={placeholder} alt=\"placeholder\" className=\"lazy-placeholder\" />\r\n      )}\r\n      {/* Actual Image */}\r\n      <img\r\n        ref={imgRef}\r\n        alt={alt}\r\n        className=\"lazy-image\"\r\n        onLoad={() => setIsLoaded(true)}\r\n        style={{ opacity: isLoaded ? 1 : 0 }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LazyImage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,SAAS,GAAGA,CAAC;EAAEC,GAAG;EAAEC,GAAG;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMY,MAAM,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE3BC,SAAS,CAAC,MAAM;IACd,MAAMW,QAAQ,GAAG,IAAIC,oBAAoB,CAAC,CAACC,OAAO,EAAEF,QAAQ,KAAK;MAC/DE,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxB,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM;UACxBD,GAAG,CAACb,GAAG,GAAGA,GAAG,CAAC,CAAC;UACfO,QAAQ,CAACQ,SAAS,CAACF,GAAG,CAAC;QACzB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAIP,MAAM,CAACU,OAAO,EAAE;MAClBT,QAAQ,CAACU,OAAO,CAACX,MAAM,CAACU,OAAO,CAAC;IAClC;IAEA,OAAO,MAAM;MACX,IAAIV,MAAM,CAACU,OAAO,EAAE;QAClBT,QAAQ,CAACQ,SAAS,CAACT,MAAM,CAACU,OAAO,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,CAAChB,GAAG,CAAC,CAAC;EAET,oBACEF,OAAA;IAAKoB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,GAEhC,CAACf,QAAQ,iBACRN,OAAA;MAAKE,GAAG,EAAEE,WAAY;MAACD,GAAG,EAAC,aAAa;MAACiB,SAAS,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACxE,eAEDzB,OAAA;MACE0B,GAAG,EAAElB,MAAO;MACZL,GAAG,EAAEA,GAAI;MACTiB,SAAS,EAAC,YAAY;MACtBO,MAAM,EAAEA,CAAA,KAAMpB,WAAW,CAAC,IAAI,CAAE;MAChCqB,KAAK,EAAE;QAAEC,OAAO,EAAEvB,QAAQ,GAAG,CAAC,GAAG;MAAE;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CA1CIJ,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}