{"ast":null,"code":"import React,{useContext}from\"react\";import{FormDataContext}from\"../../contexts/FormDataContext\";import{useNavigate}from\"react-router-dom\";import\"../../styles/flowOne/Form.css\";// Import your stylesheet here\nimport{CSSTransition}from\"react-transition-group\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StepThree2=()=>{const{formData,setFormData}=useContext(FormDataContext);const navigate=useNavigate();const handlePrevious=()=>{navigate(\"/step-two2\");};const handleNext=(numDrivers,event)=>{// Get the clicked button element\nconst button=event.currentTarget;// Add the 'green-active' class to make the button stay green\nbutton.classList.add(\"green-active\");// Parse the number of drivers\nconst numDriversInt=parseInt(numDrivers,10);// Generate an array of drivers\nconst drivers=Array.from({length:numDriversInt},(_,i)=>({id:i+1,name:\"\",age:\"\",experience:\"\"}));// Save the array of drivers in localStorage\nlocalStorage.setItem(\"drivers\",JSON.stringify(drivers));// Save the total number of drivers in localStorage\nlocalStorage.setItem(\"numDrivers\",numDriversInt);// Set form data in context\nsetFormData({...formData,numDrivers});// Delay the navigation to show the button effect\nsetTimeout(()=>{navigate(\"/step-four2\");},400);// Delay for noticeable green effect\n};return/*#__PURE__*/_jsx(CSSTransition,{in:true,appear:true,timeout:1500,classNames:\"fade-slide\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:{width:\"20%\"}})}),/*#__PURE__*/_jsx(\"h1\",{children:\"How Many Drivers Will Be Listed?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"options-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:`option-button ${formData.numDrivers===\"1\"?\"selected\":\"\"}`,onClick:event=>handleNext(\"1\",event),children:\"1\"}),/*#__PURE__*/_jsx(\"button\",{className:`option-button ${formData.numDrivers===\"2\"?\"selected\":\"\"}`,onClick:event=>handleNext(\"2\",event),children:\"2\"}),/*#__PURE__*/_jsx(\"button\",{className:`option-button ${formData.numDrivers===\"3\"?\"selected\":\"\"}`,onClick:event=>handleNext(\"3\",event),children:\"3\"}),/*#__PURE__*/_jsx(\"button\",{className:`option-button ${formData.numDrivers===\"4\"?\"selected\":\"\"}`,onClick:event=>handleNext(\"4\",event),children:\"4\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"buttons-container\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handlePrevious,children:\"Previous\"})})]})});};export default StepThree2;","map":{"version":3,"names":["React","useContext","FormDataContext","useNavigate","CSSTransition","jsx","_jsx","jsxs","_jsxs","StepThree2","formData","setFormData","navigate","handlePrevious","handleNext","numDrivers","event","button","currentTarget","classList","add","numDriversInt","parseInt","drivers","Array","from","length","_","i","id","name","age","experience","localStorage","setItem","JSON","stringify","setTimeout","in","appear","timeout","classNames","children","className","style","width","onClick"],"sources":["C:/Users/Monetizelab/OneDrive/Desktop/trisDoc/usainsurancereviews/insurance-form/src/components/UserFlowTwo/StepThree2.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { FormDataContext } from \"../../contexts/FormDataContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/flowOne/Form.css\"; // Import your stylesheet here\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst StepThree2 = () => {\r\n  const { formData, setFormData } = useContext(FormDataContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handlePrevious = () => {\r\n    navigate(\"/step-two2\");\r\n  };\r\n\r\n  const handleNext = (numDrivers, event) => {\r\n    // Get the clicked button element\r\n    const button = event.currentTarget;\r\n\r\n    // Add the 'green-active' class to make the button stay green\r\n    button.classList.add(\"green-active\");\r\n\r\n    // Parse the number of drivers\r\n    const numDriversInt = parseInt(numDrivers, 10);\r\n\r\n    // Generate an array of drivers\r\n    const drivers = Array.from({ length: numDriversInt }, (_, i) => ({\r\n      id: i + 1,\r\n      name: \"\",\r\n      age: \"\",\r\n      experience: \"\",\r\n    }));\r\n\r\n    // Save the array of drivers in localStorage\r\n    localStorage.setItem(\"drivers\", JSON.stringify(drivers));\r\n\r\n    // Save the total number of drivers in localStorage\r\n    localStorage.setItem(\"numDrivers\", numDriversInt);\r\n\r\n    // Set form data in context\r\n    setFormData({ ...formData, numDrivers });\r\n\r\n    // Delay the navigation to show the button effect\r\n    setTimeout(() => {\r\n      navigate(\"/step-four2\");\r\n    }, 400); // Delay for noticeable green effect\r\n  };\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={1500}\r\n      classNames=\"fade-slide\"\r\n    >\r\n      <div className=\"form-container\">\r\n        {/* Progress bar container with dynamic width */}\r\n        <div className=\"progress-bar-container\">\r\n          <div className=\"progress-bar\" style={{ width: \"20%\" }}></div>\r\n        </div>\r\n        <h1>How Many Drivers Will Be Listed?</h1>\r\n        <div className=\"options-container\">\r\n          <button\r\n            className={`option-button ${\r\n              formData.numDrivers === \"1\" ? \"selected\" : \"\"\r\n            }`}\r\n            onClick={(event) => handleNext(\"1\", event)}\r\n          >\r\n            1\r\n          </button>\r\n          <button\r\n            className={`option-button ${\r\n              formData.numDrivers === \"2\" ? \"selected\" : \"\"\r\n            }`}\r\n            onClick={(event) => handleNext(\"2\", event)}\r\n          >\r\n            2\r\n          </button>\r\n          <button\r\n            className={`option-button ${\r\n              formData.numDrivers === \"3\" ? \"selected\" : \"\"\r\n            }`}\r\n            onClick={(event) => handleNext(\"3\", event)}\r\n          >\r\n            3\r\n          </button>\r\n          <button\r\n            className={`option-button ${\r\n              formData.numDrivers === \"4\" ? \"selected\" : \"\"\r\n            }`}\r\n            onClick={(event) => handleNext(\"4\", event)}\r\n          >\r\n            4\r\n          </button>\r\n        </div>\r\n        <div className=\"buttons-container\">\r\n          <button onClick={handlePrevious}>Previous</button>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default StepThree2;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,eAAe,KAAQ,gCAAgC,CAChE,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,+BAA+B,CAAE;AACxC,OAASC,aAAa,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvD,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAEC,QAAQ,CAAEC,WAAY,CAAC,CAAGV,UAAU,CAACC,eAAe,CAAC,CAC7D,KAAM,CAAAU,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAU,cAAc,CAAGA,CAAA,GAAM,CAC3BD,QAAQ,CAAC,YAAY,CAAC,CACxB,CAAC,CAED,KAAM,CAAAE,UAAU,CAAGA,CAACC,UAAU,CAAEC,KAAK,GAAK,CACxC;AACA,KAAM,CAAAC,MAAM,CAAGD,KAAK,CAACE,aAAa,CAElC;AACAD,MAAM,CAACE,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC,CAEpC;AACA,KAAM,CAAAC,aAAa,CAAGC,QAAQ,CAACP,UAAU,CAAE,EAAE,CAAC,CAE9C;AACA,KAAM,CAAAQ,OAAO,CAAGC,KAAK,CAACC,IAAI,CAAC,CAAEC,MAAM,CAAEL,aAAc,CAAC,CAAE,CAACM,CAAC,CAAEC,CAAC,IAAM,CAC/DC,EAAE,CAAED,CAAC,CAAG,CAAC,CACTE,IAAI,CAAE,EAAE,CACRC,GAAG,CAAE,EAAE,CACPC,UAAU,CAAE,EACd,CAAC,CAAC,CAAC,CAEH;AACAC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAEC,IAAI,CAACC,SAAS,CAACb,OAAO,CAAC,CAAC,CAExD;AACAU,YAAY,CAACC,OAAO,CAAC,YAAY,CAAEb,aAAa,CAAC,CAEjD;AACAV,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEK,UAAW,CAAC,CAAC,CAExC;AACAsB,UAAU,CAAC,IAAM,CACfzB,QAAQ,CAAC,aAAa,CAAC,CACzB,CAAC,CAAE,GAAG,CAAC,CAAE;AACX,CAAC,CAED,mBACEN,IAAA,CAACF,aAAa,EACZkC,EAAE,CAAE,IAAK,CACTC,MAAM,CAAE,IAAK,CACbC,OAAO,CAAE,IAAK,CACdC,UAAU,CAAC,YAAY,CAAAC,QAAA,cAEvBlC,KAAA,QAAKmC,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAE7BpC,IAAA,QAAKqC,SAAS,CAAC,wBAAwB,CAAAD,QAAA,cACrCpC,IAAA,QAAKqC,SAAS,CAAC,cAAc,CAACC,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAM,CAAC,CAC1D,CAAC,cACNvC,IAAA,OAAAoC,QAAA,CAAI,kCAAgC,CAAI,CAAC,cACzClC,KAAA,QAAKmC,SAAS,CAAC,mBAAmB,CAAAD,QAAA,eAChCpC,IAAA,WACEqC,SAAS,CAAE,iBACTjC,QAAQ,CAACK,UAAU,GAAK,GAAG,CAAG,UAAU,CAAG,EAAE,EAC5C,CACH+B,OAAO,CAAG9B,KAAK,EAAKF,UAAU,CAAC,GAAG,CAAEE,KAAK,CAAE,CAAA0B,QAAA,CAC5C,GAED,CAAQ,CAAC,cACTpC,IAAA,WACEqC,SAAS,CAAE,iBACTjC,QAAQ,CAACK,UAAU,GAAK,GAAG,CAAG,UAAU,CAAG,EAAE,EAC5C,CACH+B,OAAO,CAAG9B,KAAK,EAAKF,UAAU,CAAC,GAAG,CAAEE,KAAK,CAAE,CAAA0B,QAAA,CAC5C,GAED,CAAQ,CAAC,cACTpC,IAAA,WACEqC,SAAS,CAAE,iBACTjC,QAAQ,CAACK,UAAU,GAAK,GAAG,CAAG,UAAU,CAAG,EAAE,EAC5C,CACH+B,OAAO,CAAG9B,KAAK,EAAKF,UAAU,CAAC,GAAG,CAAEE,KAAK,CAAE,CAAA0B,QAAA,CAC5C,GAED,CAAQ,CAAC,cACTpC,IAAA,WACEqC,SAAS,CAAE,iBACTjC,QAAQ,CAACK,UAAU,GAAK,GAAG,CAAG,UAAU,CAAG,EAAE,EAC5C,CACH+B,OAAO,CAAG9B,KAAK,EAAKF,UAAU,CAAC,GAAG,CAAEE,KAAK,CAAE,CAAA0B,QAAA,CAC5C,GAED,CAAQ,CAAC,EACN,CAAC,cACNpC,IAAA,QAAKqC,SAAS,CAAC,mBAAmB,CAAAD,QAAA,cAChCpC,IAAA,WAAQwC,OAAO,CAAEjC,cAAe,CAAA6B,QAAA,CAAC,UAAQ,CAAQ,CAAC,CAC/C,CAAC,EACH,CAAC,CACO,CAAC,CAEpB,CAAC,CAED,cAAe,CAAAjC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}